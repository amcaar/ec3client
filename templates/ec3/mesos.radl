description mesos (
    kind = 'main' and
    short = 'Install and configure a Mesos cluster from mesosphere repo.' and
    content = 'The template installs Mesos 1.1.0, Marathon 1.3.9 and Chronos 2.4.0 from mesosphere repo. If you want to use Docker containers, please, include the docker recipe.

Webpage: http://mesos.apache.org/'
)

network public (
    outbound = 'yes' and
    outports contains '5050/tcp' and
    outports contains '2181/tcp' and
    outports contains '2888/tcp' and
    outports contains '3888/tcp' and
    outports contains '4400/tcp' and
    outports contains '8080/tcp'
)

network private ()

system front (
    cpu.count>=1 and
    memory.size>=4g and
    net_interface.0.connection = 'private' and
    net_interface.0.dns_name = 'bigseaserver' and
    net_interface.1.connection = 'public' and
    net_interface.1.dns_name = 'bigseaserverpublic' and
    queue_system = 'mesos' and
    ec3_templates contains 'mesos' and
    # Install ansible roles needed
    disk.0.applications contains (name = 'ansible.modules.grycap.mesos') and
    disk.0.applications contains (name = 'ansible.modules.grycap.clues') and
    disk.0.applications contains (name = 'ansible.modules.grycap.im')
)

configure front (
@begin
---
  - ec3_prio: -5
    vars:
      TEMPLATES:
        ec3_jpath: /system/front/ec3_templates
      QUORUM: 1
      SYSTEMS:
         ec3_jpath: /system/*
      NNODES: '{{ SYSTEMS | selectattr("ec3_max_instances_max", "defined") | sum(attribute="ec3_max_instances_max") }}'
      AUTH:
        ec3_xpath: /system/front/auth
      QUEUE_SYSTEM:
        ec3_xpath: /system/front/queue_system
      vnode_prefix: 'bsagent'

    roles:
    # The install order matters !
    # If the role order is altered the installation won't work
    - { role: 'grycap.im' }
    - { role: 'grycap.mesos', mesos_type_of_node: 'front',
                              max_number_of_nodes: '{{NNODES}}',
                              principal: 'ubuntu',
                              secret: 'ubuntusecret' }
    - { role: 'grycap.clues', clues_queue_system: '{{QUEUE_SYSTEM}}',
                              auth: '{{AUTH}}',
                              mesos_servername: bigseaserverpublic,
                              ec3_max_instances: '{{NNODES}}'}

    post_tasks:
    - include: port_forwarding.yml
@end
)

system wnmesos (
    cpu.count>=2 and
    memory.size>=2g and
    net_interface.0.connection='private'
)

configure wnmesos (
@begin
---
  - ec3_prio: -5
    vars:
      NNODES: '{{ SYSTEMS | selectattr("ec3_max_instances_max", "defined") | sum(attribute="ec3_max_instances_max") }}'
    roles:
      - { role: 'grycap.mesos', mesos_type_of_node: 'wn',
                                max_number_of_nodes: '{{NNODES}}',
                                principal: 'ubuntu',
                                secret: 'ubuntusecret'}
@end
)

system wn (
    cpu.count>=2 and
    memory.size>=2g and
    net_interface.0.connection='private'
)

configure wn (
@begin
---
  - ec3_prio: -5
    vars:
      NNODES: '{{ SYSTEMS | selectattr("ec3_max_instances_max", "defined") | sum(attribute="ec3_max_instances_max") }}'
    roles:
      - { role: 'grycap.mesos', mesos_type_of_node: 'wn',
                                max_number_of_nodes: '{{NNODES}}',
                                principal: 'ubuntu',
                                secret: 'ubuntusecret'}
@end
)

configure port_forwarding (
@begin
  - name: Enable port forwarding
    shell: echo '1' > /proc/sys/net/ipv4/ip_forward

  - name: Add configuration for port forwarding
    lineinfile:
      dest: /etc/sysctl.conf
      line: 'net.ipv4.ip_forward = 1'

  - name: Add routing for Mesos
    shell: iptables -t nat -A PREROUTING -i eth0 -d {{IM_NODE_PUBLIC_IP}} -p tcp --dport 5050 -j DNAT --to-destination {{hostvars[groups["front"][0]]["IM_NODE_PRIVATE_IP"]}}:5050

  - name: Add routing for Spark History Server
    shell: iptables -t nat -A PREROUTING -i eth0 -d {{IM_NODE_PUBLIC_IP}} -p tcp --dport 18080 -j DNAT --to-destination {{hostvars[groups["front"][0]]["IM_NODE_PRIVATE_IP"]}}:18080
@end
)

deploy front 1
